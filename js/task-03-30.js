// Задача. Карточки задач
// Задание
// Напиши функцию makeTask(data) которая принимает один параметр data - объект со следующими свойствами.

// text - текст задачи.
// category - категория задачи.
// priority - приоритет задачи.
// Функция должна составить и вернуть новый объект задачи, не изменяя напрямую параметр data.
// В новом объекте должно быть свойство completed, значение которого хранится в одноимённой локальной переменной.

// В параметре data гарантированно будет только свойство text, а остальные два, category и priority, могут отсутствовать.
// Тогда, в новом объекте задачи, в свойствах category и priority должны быть значения по умолчанию, хранящиеся в одноимённых локальных переменных.

// Решение

function makeTask(data) {
  const completed = false;
  const category = 'Общее';
  const priority = 'Обычный';
  //   Пиши код ниже этой строки
  //   Добавляем новый обьект. В него записываем значения по умолчанию category, priority, completed. Которые идут по умолчанию (data) может их перезаписать.
  // В этот обьект добавляем наши данные которые приходят из аргумента функции, которые если есть то перезаписывают уже имеющиеся данные.
  const newObj = { category, priority, ...data, completed };

  return newObj;
  // Пиши код выше этой строки
}

const r1 = makeTask({
  category: 'Домашнее',
  priority: 'Низкий',
  text: 'Вынести мусор',
});
console.log(r1);

const r2 = makeTask({ category: 'Финансы', text: 'Забрать проценты' });
console.log(r2);

// Вызов makeTask({ category: 'Домашнее', priority: 'Низкий', text: 'Вынести мусор' })
// возвращает { category: 'Домашнее', priority: 'Низкий', text: 'Вынести мусор', completed: false }

// Вызов makeTask({ category: 'Финансы', text: 'Забрать проценты' })
// возвращает { category: 'Финансы', priority: 'Обычный', text: 'Забрать проценты', completed: false }
